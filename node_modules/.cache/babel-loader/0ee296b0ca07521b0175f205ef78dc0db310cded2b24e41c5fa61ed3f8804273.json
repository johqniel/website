{"ast":null,"code":"var _jsxFileName = \"/Users/nielo/Desktop/website/src/components/TerminalWindow.tsx\";\n// src/components/TerminalWindow.tsx\n\nimport React from 'react';\n// Import our new type\nimport '../styles/Terminal.css'; // We will rewrite this file\n\n// 1. Define the new props\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TerminalWindow = ({\n  analysis\n}) => {\n  // 2. If there's no analysis yet, show a placeholder\n  if (!analysis) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-container placeholder\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Analysis will appear here after 5 messages...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 3. Get the top two predictions\n  // The list is already sorted by the server\n  const topPrediction = analysis.predictions[0];\n  const secondPrediction = analysis.predictions[1];\n\n  // Helper to format the score as a percentage\n  const formatPercent = score => {\n    return (score * 100).toFixed(1) + '%';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analysis-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: analysis.summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"predictions-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Predictions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), topPrediction && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prediction-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"prediction-label\",\n          children: [\"most likely: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"probably:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 61\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"prediction-tag\",\n          style: {\n            backgroundColor: topPrediction.color,\n            color: '#ffffff' // Assume white text on a colored background\n          },\n          children: [topPrediction.label, \" (\", formatPercent(topPrediction.score), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), secondPrediction && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prediction-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"prediction-label\",\n          children: [\"second most likely: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"potentially:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 68\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"prediction-tag\",\n          style: {\n            backgroundColor: secondPrediction.color,\n            color: '#ffffff'\n          },\n          children: [secondPrediction.label, \" (\", formatPercent(secondPrediction.score), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = TerminalWindow;\nexport default TerminalWindow;\nvar _c;\n$RefreshReg$(_c, \"TerminalWindow\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TerminalWindow","analysis","className","children","fileName","_jsxFileName","lineNumber","columnNumber","topPrediction","predictions","secondPrediction","formatPercent","score","toFixed","summary","style","backgroundColor","color","label","_c","$RefreshReg$"],"sources":["/Users/nielo/Desktop/website/src/components/TerminalWindow.tsx"],"sourcesContent":["// src/components/TerminalWindow.tsx\n\nimport React from 'react';\nimport { AnalysisResult } from '../types'; // Import our new type\nimport '../styles/Terminal.css'; // We will rewrite this file\n\n// 1. Define the new props\ninterface TerminalWindowProps {\n  analysis: AnalysisResult | null;\n}\n\nconst TerminalWindow: React.FC<TerminalWindowProps> = ({ analysis }) => {\n  \n  // 2. If there's no analysis yet, show a placeholder\n  if (!analysis) {\n    return (\n      <div className=\"analysis-container placeholder\">\n        <p>Analysis will appear here after 5 messages...</p>\n      </div>\n    );\n  }\n\n  // 3. Get the top two predictions\n  // The list is already sorted by the server\n  const topPrediction = analysis.predictions[0];\n  const secondPrediction = analysis.predictions[1];\n\n  // Helper to format the score as a percentage\n  const formatPercent = (score: number) => {\n    return (score * 100).toFixed(1) + '%';\n  };\n\n  return (\n    <div className=\"analysis-container\">\n      {/* 4. The Summary Box */}\n      <div className=\"summary-box\">\n        <h3>Summary</h3>\n        <p>{analysis.summary}</p>\n      </div>\n      \n      {/* 5. The Predictions List */}\n      <div className=\"predictions-list\">\n        <h3>Predictions</h3>\n        \n        {/* Top Prediction */}\n        {topPrediction && (\n          <div className=\"prediction-item\">\n            <span className=\"prediction-label\">most likely: <strong>probably:</strong></span>\n            <span \n              className=\"prediction-tag\"\n              style={{ \n                backgroundColor: topPrediction.color,\n                color: '#ffffff' // Assume white text on a colored background\n              }}\n            >\n              {topPrediction.label} ({formatPercent(topPrediction.score)})\n            </span>\n          </div>\n        )}\n\n        {/* Second Prediction */}\n        {secondPrediction && (\n          <div className=\"prediction-item\">\n            <span className=\"prediction-label\">second most likely: <strong>potentially:</strong></span>\n            <span \n              className=\"prediction-tag\"\n              style={{ \n                backgroundColor: secondPrediction.color,\n                color: '#ffffff'\n              }}\n            >\n              {secondPrediction.label} ({formatPercent(secondPrediction.score)})\n            </span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TerminalWindow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}