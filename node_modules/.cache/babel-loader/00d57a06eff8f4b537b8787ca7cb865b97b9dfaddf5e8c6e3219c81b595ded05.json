{"ast":null,"code":"var _jsxFileName = \"/Users/nielo/Desktop/website/src/App.tsx\",\n  _s = $RefreshSig$();\n// src/App.tsx\n\nimport React, { useState } from 'react';\nimport ChatWindow from './components/ChatWindow';\nimport TerminalWindow from './components/TerminalWindow';\nimport './styles/AppLayout.css'; // Import new layout CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State for both windows now lives here\n  const [chatMessages, setChatMessages] = useState([]);\n  const [terminalMessages, setTerminalMessages] = useState([]);\n\n  // This function will be passed to ChatWindow\n  // ChatWindow can call this to add a new \"thought\" to the terminal\n  const addTerminalMessage = text => {\n    const newTerminalMessage = {\n      id: `term-${Date.now()}`,\n      text: text\n    };\n    // Add the new message to the list\n    setTerminalMessages(prevMessages => [...prevMessages, newTerminalMessage]);\n  };\n  return (\n    /*#__PURE__*/\n    // Use the new main-layout class\n    _jsxDEV(\"div\", {\n      className: \"main-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-column\",\n        children: /*#__PURE__*/_jsxDEV(ChatWindow\n        // Pass the state and functions down as props\n        , {\n          messages: chatMessages,\n          setMessages: setChatMessages,\n          addTerminalMessage: addTerminalMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"terminal-column\",\n        children: /*#__PURE__*/_jsxDEV(TerminalWindow, {\n          messages: terminalMessages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"9bVcmtCvYzyhF/4MRvjXqfqpBPk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ChatWindow","TerminalWindow","jsxDEV","_jsxDEV","App","_s","chatMessages","setChatMessages","terminalMessages","setTerminalMessages","addTerminalMessage","text","newTerminalMessage","id","Date","now","prevMessages","className","children","messages","setMessages","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nielo/Desktop/website/src/App.tsx"],"sourcesContent":["// src/App.tsx\n\nimport React, { useState } from 'react';\nimport ChatWindow from './components/ChatWindow';\nimport TerminalWindow from './components/TerminalWindow';\nimport { ChatMessage, TerminalMessage } from './types';\nimport './styles/AppLayout.css'; // Import new layout CSS\n\nfunction App() {\n  // State for both windows now lives here\n  const [chatMessages, setChatMessages] = useState<ChatMessage[]>([]);\n  const [terminalMessages, setTerminalMessages] = useState<TerminalMessage[]>([]);\n\n  // This function will be passed to ChatWindow\n  // ChatWindow can call this to add a new \"thought\" to the terminal\n  const addTerminalMessage = (text: string) => {\n    const newTerminalMessage: TerminalMessage = {\n      id: `term-${Date.now()}`,\n      text: text,\n    };\n    // Add the new message to the list\n    setTerminalMessages((prevMessages) => [...prevMessages, newTerminalMessage]);\n  };\n\n  return (\n    // Use the new main-layout class\n    <div className=\"main-layout\">\n      \n      {/* Column 1: Chat */}\n      <div className=\"chat-column\">\n        <ChatWindow \n          // Pass the state and functions down as props\n          messages={chatMessages}\n          setMessages={setChatMessages}\n          addTerminalMessage={addTerminalMessage} \n        />\n      </div>\n      \n      {/* Column 2: Terminal */}\n      <div className=\"terminal-column\">\n        <TerminalWindow messages={terminalMessages} />\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,cAAc,MAAM,6BAA6B;AAExD,OAAO,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAgB,EAAE,CAAC;EACnE,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAoB,EAAE,CAAC;;EAE/E;EACA;EACA,MAAMW,kBAAkB,GAAIC,IAAY,IAAK;IAC3C,MAAMC,kBAAmC,GAAG;MAC1CC,EAAE,EAAE,QAAQC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;MACxBJ,IAAI,EAAEA;IACR,CAAC;IACD;IACAF,mBAAmB,CAAEO,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEJ,kBAAkB,CAAC,CAAC;EAC9E,CAAC;EAED;IAAA;IACE;IACAT,OAAA;MAAKc,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAG1Bf,OAAA;QAAKc,SAAS,EAAC,aAAa;QAAAC,QAAA,eAC1Bf,OAAA,CAACH;QACC;QAAA;UACAmB,QAAQ,EAAEb,YAAa;UACvBc,WAAW,EAAEb,eAAgB;UAC7BG,kBAAkB,EAAEA;QAAmB;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGNrB,OAAA;QAAKc,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9Bf,OAAA,CAACF,cAAc;UAACkB,QAAQ,EAAEX;QAAiB;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH;EAAC;AAEV;AAACnB,EAAA,CArCQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}