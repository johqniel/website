{"ast":null,"code":"var _jsxFileName = \"/Users/nielo/Desktop/website/src/components/ChatWindow.tsx\",\n  _s = $RefreshSig$();\n// src/components/ChatWindow.tsx\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Message from './Message';\nimport '../styles/Chat.css';\n\n// 1. Define the props it now receives from App.tsx\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// 2. Accept the new props\nconst ChatWindow = ({\n  messages,\n  setMessages,\n  updateAnalysis\n}) => {\n  _s();\n  // sessionId stuff:\n  const [sessionId, setSessionId] = useState(null);\n  useEffect(() => {\n    let currentId = localStorage.getItem('chat_session_id');\n    if (!currentId) {\n      // if no Id exists: create new\n      currentId = crypto.randomUUID();\n      localStorage.setItem('chat_session_id', currentId);\n    }\n    setSessionId(currentId);\n  }, []); // [] means this runs only once \n\n  const [currentMessage, setCurrentMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messageListRef = useRef(null);\n  useEffect(() => {\n    if (messageListRef.current) {\n      messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n    }\n  }, [messages]); // This still works, as it now watches the `messages` prop\n\n  const getTimestamp = () => {\n    return new Date().toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true\n    });\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!sessionId) {\n      console.error(\"Session ID not set\");\n      return;\n    }\n    const text = currentMessage.trim();\n    if (text === '') return;\n    const userMessage = {\n      id: `user-${Date.now()}`,\n      text: text,\n      sender: 'user',\n      timestamp: getTimestamp()\n    };\n\n    // This `setMessages` function now updates the state in App.tsx\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setCurrentMessage('');\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://localhost:8000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: text,\n          session_id: sessionId\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      //const botResponseText = data.response; // Adjust this based on your API\n\n      // 5. *** ADD ANOTHER \"THOUGHT\" ***\n      //addTerminalMessage(`LLM-1 generated response: \"${botResponseText.substring(0, 20)}...\".`);\n\n      const botMessage = {\n        id: `bot-${Date.now()}`,\n        text: data.response,\n        sender: 'bot',\n        timestamp: getTimestamp()\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n      if (data.analysis) {\n        updateAnalysis(data.analysis);\n      }\n    } catch (error) {\n      // 6. *** ADD AN ERROR analysis ***\n      console.error('Error occurred: ', error);\n      const errorMessage = {\n        id: `error-${Date.now()}`,\n        text: 'Sorry, I ran into an error. Please try again.',\n        sender: 'bot',\n        timestamp: getTimestamp()\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://via.placeholder.com/40\",\n        alt: \"avatar\",\n        className: \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Jonathan (Best-friend)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"online\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list\",\n      ref: messageListRef,\n      children: [messages.map(msg => /*#__PURE__*/_jsxDEV(Message, {\n        message: msg\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"message-input-form\",\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: currentMessage,\n        onChange: e => setCurrentMessage(e.target.value),\n        placeholder: \"Type a message...\",\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"JJguFs+PGQ3W5fJ/osFM2O2XT5c=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Message","jsxDEV","_jsxDEV","ChatWindow","messages","setMessages","updateAnalysis","_s","sessionId","setSessionId","currentId","localStorage","getItem","crypto","randomUUID","setItem","currentMessage","setCurrentMessage","isLoading","setIsLoading","messageListRef","current","scrollTop","scrollHeight","getTimestamp","Date","toLocaleTimeString","hour","minute","hour12","handleSendMessage","e","preventDefault","console","error","text","trim","userMessage","id","now","sender","timestamp","prevMessages","response","fetch","method","headers","body","JSON","stringify","message","session_id","ok","Error","data","json","botMessage","analysis","errorMessage","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","msg","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/nielo/Desktop/website/src/components/ChatWindow.tsx"],"sourcesContent":["// src/components/ChatWindow.tsx\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { AnalysisResult, ChatMessage } from '../types';\nimport Message from './Message';\nimport '../styles/Chat.css';\n\n\n\n\n// 1. Define the props it now receives from App.tsx\ninterface ChatWindowProps {\n  messages: ChatMessage[];\n  setMessages: React.Dispatch<React.SetStateAction<ChatMessage[]>>;\n  updateAnalysis: (result: AnalysisResult) => void; // Function to add \"thoughts\"\n}\n\n// 2. Accept the new props\nconst ChatWindow: React.FC<ChatWindowProps> = ({ messages, setMessages, updateAnalysis }) => {\n  \n  // sessionId stuff:\n  const [sessionId, setSessionId] = useState<string | null>(null);\n  useEffect(() => {\n    let currentId = localStorage.getItem('chat_session_id');\n    if (!currentId) {\n      // if no Id exists: create new\n      currentId = crypto.randomUUID();\n      localStorage.setItem('chat_session_id',currentId);\n    }\n\n    setSessionId(currentId);\n  }, []); // [] means this runs only once \n\n\n  \n  const [currentMessage, setCurrentMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messageListRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (messageListRef.current) {\n      messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n    }\n  }, [messages]); // This still works, as it now watches the `messages` prop\n\n  const getTimestamp = () => {\n    return new Date().toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true,\n    });\n  };\n\n  const handleSendMessage = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!sessionId) {\n      console.error(\"Session ID not set\");\n      return;\n    }\n\n\n    const text = currentMessage.trim();\n    if (text === '') return;\n\n    const userMessage: ChatMessage = {\n      id: `user-${Date.now()}`,\n      text: text,\n      sender: 'user',\n      timestamp: getTimestamp(),\n    };\n    \n    // This `setMessages` function now updates the state in App.tsx\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\n    setCurrentMessage('');\n    setIsLoading(true);\n\n  \n    try {\n      const response = await fetch('http://localhost:8000/api/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ \n          message: text,\n          session_id: sessionId \n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const data = await response.json();\n      //const botResponseText = data.response; // Adjust this based on your API\n\n      // 5. *** ADD ANOTHER \"THOUGHT\" ***\n      //addTerminalMessage(`LLM-1 generated response: \"${botResponseText.substring(0, 20)}...\".`);\n\n      const botMessage: ChatMessage = {\n        id: `bot-${Date.now()}`,\n        text: data.response,\n        sender: 'bot',\n        timestamp: getTimestamp(),\n      };\n      \n      setMessages((prevMessages) => [...prevMessages, botMessage]);\n\n      if (data.analysis) {\n        updateAnalysis(data.analysis);\n      }\n\n    } catch (error) {\n      // 6. *** ADD AN ERROR analysis ***\n      console.error('Error occurred: ', error);\n\n      const errorMessage: ChatMessage = {\n        id: `error-${Date.now()}`,\n        text: 'Sorry, I ran into an error. Please try again.',\n        sender: 'bot',\n        timestamp: getTimestamp(),\n      };\n      setMessages((prevMessages) => [...prevMessages, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-header\">\n        <img src=\"https://via.placeholder.com/40\" alt=\"avatar\" className=\"avatar\" />\n        <div className=\"contact-info\">\n          <h3>Jonathan (Best-friend)</h3>\n          <p>online</p>\n        </div>\n      </div>\n      \n      <div className=\"message-list\" ref={messageListRef}>\n        {messages.map((msg) => (\n          <Message key={msg.id} message={msg} />\n        ))}\n        {isLoading && (\n          <div className=\"message bot\">\n            <div className=\"typing-indicator\">\n              <span></span><span></span><span></span>\n            </div>\n          </div>\n        )}\n      </div>\n\n      <form className=\"message-input-form\" onSubmit={handleSendMessage}>\n        <input\n          type=\"text\"\n          value={currentMessage}\n          onChange={(e) => setCurrentMessage(e.target.value)}\n          placeholder=\"Type a message...\"\n          disabled={isLoading}\n        />\n        <button type=\"submit\" disabled={isLoading}>\n          &#x27A4;\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatWindow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}