{"ast":null,"code":"var _jsxFileName = \"/Users/nielo/Desktop/website/src/components/ChatWindow.tsx\",\n  _s = $RefreshSig$();\n// src/components/ChatWindow.tsx\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Message from './Message';\nimport '../styles/Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Ref to the message list for auto-scrolling\n  const messageListRef = useRef(null);\n\n  // Auto-scroll to the bottom when new messages are added\n  useEffect(() => {\n    if (messageListRef.current) {\n      messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  // Function to get a formatted timestamp\n  const getTimestamp = () => {\n    return new Date().toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true\n    });\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    const text = currentMessage.trim();\n    if (text === '') return;\n\n    // 1. Add user's message to the chat\n    const userMessage = {\n      id: `user-${Date.now()}`,\n      text: text,\n      sender: 'user',\n      timestamp: getTimestamp()\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setCurrentMessage('');\n    setIsLoading(true);\n\n    // 2. Send the message to your Python backend\n    try {\n      // IMPORTANT: Update '/api/chat' to your actual backend endpoint\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: text\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n\n      // Assume your backend returns: { \"response\": \"Hello from the LLM!\" }\n      const botMessage = {\n        id: `bot-${Date.now()}`,\n        text: data.response,\n        // Adjust this based on your API's response\n        sender: 'bot',\n        timestamp: getTimestamp()\n      };\n\n      // 3. Add the bot's response to the chat\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      // Optionally add an error message to the chat\n      const errorMessage = {\n        id: `error-${Date.now()}`,\n        text: 'Sorry, I ran into an error. Please try again.',\n        sender: 'bot',\n        timestamp: getTimestamp()\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://via.placeholder.com/40\",\n        alt: \"avatar\",\n        className: \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"LLM Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"online\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-list\",\n      ref: messageListRef,\n      children: [messages.map(msg => /*#__PURE__*/_jsxDEV(Message, {\n        message: msg\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"message-input-form\",\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: currentMessage,\n        onChange: e => setCurrentMessage(e.target.value),\n        placeholder: \"Type a message...\",\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"zLaSt1hR6Lgo5qKomwgLgmDK+QU=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Message","jsxDEV","_jsxDEV","ChatWindow","_s","messages","setMessages","currentMessage","setCurrentMessage","isLoading","setIsLoading","messageListRef","current","scrollTop","scrollHeight","getTimestamp","Date","toLocaleTimeString","hour","minute","hour12","handleSendMessage","e","preventDefault","text","trim","userMessage","id","now","sender","timestamp","prevMessages","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","data","json","botMessage","error","console","errorMessage","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","msg","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/nielo/Desktop/website/src/components/ChatWindow.tsx"],"sourcesContent":["// src/components/ChatWindow.tsx\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { ChatMessage } from '../types';\nimport Message from './Message';\nimport '../styles/Chat.css';\n\nconst ChatWindow: React.FC = () => {\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\n  const [currentMessage, setCurrentMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Ref to the message list for auto-scrolling\n  const messageListRef = useRef<HTMLDivElement>(null);\n\n  // Auto-scroll to the bottom when new messages are added\n  useEffect(() => {\n    if (messageListRef.current) {\n      messageListRef.current.scrollTop = messageListRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  // Function to get a formatted timestamp\n  const getTimestamp = () => {\n    return new Date().toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true,\n    });\n  };\n\n  const handleSendMessage = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const text = currentMessage.trim();\n    if (text === '') return;\n\n    // 1. Add user's message to the chat\n    const userMessage: ChatMessage = {\n      id: `user-${Date.now()}`,\n      text: text,\n      sender: 'user',\n      timestamp: getTimestamp(),\n    };\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\n    setCurrentMessage('');\n    setIsLoading(true);\n\n    // 2. Send the message to your Python backend\n    try {\n      // IMPORTANT: Update '/api/chat' to your actual backend endpoint\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message: text }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const data = await response.json();\n      \n      // Assume your backend returns: { \"response\": \"Hello from the LLM!\" }\n      const botMessage: ChatMessage = {\n        id: `bot-${Date.now()}`,\n        text: data.response, // Adjust this based on your API's response\n        sender: 'bot',\n        timestamp: getTimestamp(),\n      };\n\n      // 3. Add the bot's response to the chat\n      setMessages((prevMessages) => [...prevMessages, botMessage]);\n\n    } catch (error) {\n      console.error('Error sending message:', error);\n      // Optionally add an error message to the chat\n      const errorMessage: ChatMessage = {\n        id: `error-${Date.now()}`,\n        text: 'Sorry, I ran into an error. Please try again.',\n        sender: 'bot',\n        timestamp: getTimestamp(),\n      };\n      setMessages((prevMessages) => [...prevMessages, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-header\">\n        <img src=\"https://via.placeholder.com/40\" alt=\"avatar\" className=\"avatar\" />\n        <div className=\"contact-info\">\n          <h3>LLM Assistant</h3>\n          <p>online</p>\n        </div>\n      </div>\n      \n      <div className=\"message-list\" ref={messageListRef}>\n        {messages.map((msg) => (\n          <Message key={msg.id} message={msg} />\n        ))}\n        {isLoading && (\n          <div className=\"message bot\">\n            <div className=\"typing-indicator\">\n              <span></span><span></span><span></span>\n            </div>\n          </div>\n        )}\n      </div>\n\n      <form className=\"message-input-form\" onSubmit={handleSendMessage}>\n        <input\n          type=\"text\"\n          value={currentMessage}\n          onChange={(e) => setCurrentMessage(e.target.value)}\n          placeholder=\"Type a message...\"\n          disabled={isLoading}\n        />\n        <button type=\"submit\" disabled={isLoading}>\n          {/* Simple Send Icon (you can replace with an SVG) */}\n          &#x27A4;\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatWindow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}